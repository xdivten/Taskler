import React, { useState } from 'react';
import './AssistantChat.css';

const AssistantChat = ({ onClose }) => {
  const [input, setInput] = useState('');
  const [messages, setMessages] = useState([
    { role: 'assistant', text: '–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?' }
  ]);
  const [response, setResponse] = useState(null);

  const handleSend = () => {
    if (!input.trim()) return;

    // –î–æ–±–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const newMessage = { role: 'user', text: input };
    setMessages([...messages, newMessage]);
    setInput('');

    // –ú–æ–∫ GPT-–æ—Ç–≤–µ—Ç–∞
    const mockResponse = `‚úÖ –ó–∞–¥–∞—á–∏ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö —Ä—É—Ç–∏–Ω —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫:\n- –ü–æ–¥—ä—ë–º –≤ 7:00\n- –ó–∞—Ä—è–¥–∫–∞\n- –ó–∞–≤—Ç—Ä–∞–∫\n- –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω—è`;
    setTimeout(() => {
      setMessages(prev => [...prev, { role: 'assistant', text: mockResponse }]);
      setResponse(mockResponse);
    }, 500);
  };

  const handleApply = () => {
    alert('–ó–∞–¥–∞—á–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (–º–æ–∫).');
    onClose();
  };

  return (
    <div className="assistant-chat-overlay">
      <div className="assistant-chat-panel">
        <div className="assistant-chat-header">
          <h3>ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç</h3>
          <button className="assistant-close" onClick={onClose}>√ó</button>
        </div>

        <div className="assistant-chat-body">
          {messages.map((msg, idx) => (
            <div
              key={idx}
              className={`assistant-message ${msg.role}`}
            >
              {msg.text}
            </div>
          ))}
        </div>

        <div className="assistant-chat-input">
          <input
            type="text"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å..."
            value={input}
            onChange={e => setInput(e.target.value)}
            onKeyDown={e => e.key === 'Enter' && handleSend()}
          />
          <button onClick={handleSend}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        </div>

        {response && (
          <div className="assistant-chat-apply">
            <button onClick={handleApply}>–ü—Ä–∏–º–µ–Ω–∏—Ç—å</button>
          </div>
        )}
      </div>
    </div>
  );
};

export default AssistantChat;
